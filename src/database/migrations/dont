import {getRepository, MigrationInterface, QueryRunner, Repository} from "typeorm";

import { Game } from '../../modules/games/entities/Game';
import { User } from '../../modules/users/entities/User';

const usersSeed: User[] = [
  {
    first_name: 'Vinicius',
    last_name: 'Fraga',
    email: 'vinicius.fraga@rocketseat.com.br',
  },
  {
    first_name: 'Danilo',
    last_name: 'Vieira',
    email: 'danilo.vieira@rocketseat.com.br',
  },
  {
    first_name: 'Joseph',
    last_name: 'Oliveira',
    email: 'joseph.oliveira@rocketseat.com.br',
  },
  {
    first_name: 'Daniele',
    last_name: 'Le√£o',
    email: 'dani.leao@rocketseat.com.br',
  },
] as User[];

const gamesSeed: Pick<Game, 'title'>[] = [
  {
    title: 'Rocket League',
  },
  {
    title: 'The Last Of Us',
  },
  {
    title: 'Need For Speed: Most Wanted',
  },
  {
    title: 'Need For Speed: Payback',
  },
];

export class SeedData1630752730362 implements MigrationInterface {

    public async up(queryRunner: QueryRunner): Promise<void> {
      let ormUsersRepository: Repository<User>;
      let ormGamesRepository: Repository<Game>;

      ormUsersRepository = getRepository(User);
      ormGamesRepository = getRepository(Game);

      const [RL, TLOU, NFSMW, NFSP] = await ormGamesRepository.save(gamesSeed);

      const [vinicius, danilo, joseph, daniele] = usersSeed;
  
      vinicius.games = [RL, NFSMW, NFSP];
      danilo.games = [RL, NFSMW, TLOU];
      joseph.games = [RL, NFSMW];
      daniele.games = [NFSMW, NFSP, TLOU];
  
      await ormUsersRepository.save(usersSeed);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
      await queryRunner.query("delete from games");
      await queryRunner.query("delete from users");
    }

}
